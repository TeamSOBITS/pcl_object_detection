#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#cfgファイルが入っているpackage名を記述
PACKAGE = "pcl_object_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#rqt_reconfigureで動的に変更したい変数を宣言していく

gen.add("pointcloud_topic_name", str_t, 0, "サブスクライブする点群のトピック名", "/points2")
gen.add("base_frame_name", str_t, 0, "基準フレーム名", "base_footprint")
gen.add("publish_cloud_detection_range", bool_t, 0, "検出範囲の点群をパブリッシュするか", True)
gen.add("publish_cloud_object", bool_t, 0, "検出物体の点群をパブリッシュするか", True)
gen.add("publish_pose_array", bool_t, 0, "検出物体の位置をパブリッシュするか", True)
gen.add("use_tf", bool_t, 0, "検出物体の位置のTFを登録するか", True)
gen.add("use_sobit_pro", bool_t, 0, "SOBIT PROを使用するか", False)
passthrough = gen.add_group("passthrough", state = True)
passthrough.add("passthrough_x_min", double_t, 0, "passthroughのx軸の最小距離", 0.0, -10.0, 10.0)
passthrough.add("passthrough_x_max", double_t, 0, "passthroughのx軸の最大距離", 2.0, -10.0, 10.0)
passthrough.add("passthrough_y_min", double_t, 0, "passthroughのy軸の最小距離", -0.6, -10.0, 10.0)
passthrough.add("passthrough_y_max", double_t, 0, "passthroughのy軸の最大距離", 0.6, -10.0, 10.0)
passthrough.add("passthrough_z_min", double_t, 0, "passthroughのz軸の最小距離", 0.15, -10.0, 10.0)
passthrough.add("passthrough_z_max", double_t, 0, "passthroughのz軸の最大距離", 0.8, -10.0, 10.0)
voxel_grid  = gen.add_group("voxel_grid", state = False)
voxel_grid.add("use_voxel", bool_t, 0, "ダウンサンプリングするか", False)
voxel_grid.add("leaf_size", double_t, 0, "ダウンサンプリング間隔[m]", 0.01, 0.001, 1.0)
plane_removal = gen.add_group("plane_removal", state = True)
plane_removal.add("threshold_distance", double_t, 0, "モデルしきい値（ユーザー指定のパラメーター）までの距離", 0.015, -10.0, 10.0)
plane_removal.add("probability", double_t, 0, "外れ値のないサンプルを少なくとも1つ選択する確率を設定(モデル適合確率)", 0.95, -10.0, 10.0)
clustering  = gen.add_group("clustering", state = True)
clustering.add("cluster_tolerance", double_t, 0, "クラスタリングでの点群の幅を設定(m)", 0.05, -10.0, 10.0)
clustering.add("min_cluster_point_size", int_t, 0, "クラスタの点群最小サイズ(個)", 100, 0, 1000000)
clustering.add("max_cluster_point_size", int_t, 0, "クラスタの点群最大サイズ(個)", 8000, 0, 1000000)
object = gen.add_group("object", state = True)
object.add("object_size_x_min", double_t, 0, "object_sizeのx軸の最小距離", 0.0, 0.0, 10.0)
object.add("object_size_x_max", double_t, 0, "object_sizeのx軸の最大距離", 1.0, 0.0, 10.0)
object.add("object_size_y_min", double_t, 0, "object_sizeのy軸の最小距離", 0.0, 0.0, 10.0)
object.add("object_size_y_max", double_t, 0, "object_sizeのy軸の最大距離", 1.0, 0.0, 10.0)
object.add("object_size_z_min", double_t, 0, "object_sizeのz軸の最小距離", 0.0, 0.0, 10.0)
object.add("object_size_z_max", double_t, 0, "object_sizeのz軸の最大距離", 1.0, 0.0, 10.0)
object.add("object_centroid_offset_x", double_t, 0, "物体位置のx軸のオフセット(m)", 0.0, -1.0, 1.0)
object.add("object_centroid_offset_y", double_t, 0, "物体位置のy軸のオフセット(m)", 0.0, -1.0, 1.0)
object.add("object_centroid_offset_z", double_t, 0, "物体位置のz軸のオフセット(m)", 0.0, -1.0, 1.0)
placeable = gen.add_group("placeable", state = True)
placeable.add("placeable_search_interval", double_t, 0, "配置位置の検索間隔[m]", 0.01, 0.001, 1.0)
placeable.add("obstacle_tolerance", double_t, 0, "配置位置の検索での障害物許容範囲[m]", 0.05, 0.001, 1.0)
#最終行では第2引数はパッケージ名、第3引数はこのファイル名から拡張子を除いた物に
exit(gen.generate(PACKAGE, "pcl_object_detection", "PCLParameter"))
